class r{constructor(){this.settings={},this.user=null,this.init()}async init(){await this.loadSettings(),await this.loadUserData(),this.setupEventListeners(),this.updateUI()}async loadSettings(){try{const e=await chrome.storage.sync.get(["enabled","showAnonymousWarning","autoExpand"]);this.settings={enabled:e.enabled!==void 0?e.enabled:!0,showAnonymousWarning:e.showAnonymousWarning!==void 0?e.showAnonymousWarning:!0,autoExpand:e.autoExpand!==void 0?e.autoExpand:!1}}catch(e){console.error("Failed to load settings:",e),this.settings={enabled:!0,showAnonymousWarning:!0,autoExpand:!1}}}async loadUserData(){try{this.user=null}catch(e){console.error("Failed to load user data:",e),this.user=null}}setupEventListeners(){const e=document.getElementById("enabled-toggle"),n=document.getElementById("anonymous-warning-toggle"),s=document.getElementById("auto-expand-toggle");e.addEventListener("change",t=>{this.updateSetting("enabled",t.target.checked)}),n.addEventListener("change",t=>{this.updateSetting("showAnonymousWarning",t.target.checked)}),s.addEventListener("change",t=>{this.updateSetting("autoExpand",t.target.checked)});const o=document.getElementById("sign-in-btn"),a=document.getElementById("sign-out-btn");o.addEventListener("click",()=>{this.signIn()}),a.addEventListener("click",()=>{this.signOut()});const i=document.getElementById("feedback-link"),d=document.getElementById("help-link");i.addEventListener("click",t=>{t.preventDefault(),this.openFeedback()}),d.addEventListener("click",t=>{t.preventDefault(),this.openHelp()})}updateUI(){document.getElementById("enabled-toggle").checked=this.settings.enabled,document.getElementById("anonymous-warning-toggle").checked=this.settings.showAnonymousWarning,document.getElementById("auto-expand-toggle").checked=this.settings.autoExpand,this.user?this.showUserState():this.showAnonymousState(),this.updateStats()}showUserState(){document.getElementById("user-info").style.display="flex",document.getElementById("anonymous-user").style.display="none",document.getElementById("user-name").textContent=this.user.name||"User",document.getElementById("user-email").textContent=this.user.email||""}showAnonymousState(){document.getElementById("user-info").style.display="none",document.getElementById("anonymous-user").style.display="flex"}updateStats(){document.getElementById("comments-count").textContent="0",document.getElementById("helpful-count").textContent="0"}async updateSetting(e,n){try{this.settings[e]=n,await chrome.storage.sync.set({[e]:n}),(await chrome.tabs.query({url:["*://*.zillow.com/*","*://*.redfin.com/*","*://*.apartments.com/*","*://*.loopnet.com/*"]})).forEach(o=>{chrome.tabs.sendMessage(o.id,{type:"SETTINGS_CHANGED",changes:{[e]:{newValue:n}}}).catch(()=>{})})}catch(s){console.error("Failed to update setting:",s)}}async signIn(){try{console.log("Sign in requested"),alert("Authentication will be implemented with Supabase integration")}catch(e){console.error("Sign in failed:",e)}}async signOut(){try{this.user=null,this.showAnonymousState(),(await chrome.tabs.query({url:["*://*.zillow.com/*","*://*.redfin.com/*","*://*.apartments.com/*","*://*.loopnet.com/*"]})).forEach(n=>{chrome.tabs.sendMessage(n.id,{type:"AUTH_CHANGED",user:null}).catch(()=>{})})}catch(e){console.error("Sign out failed:",e)}}openFeedback(){chrome.tabs.create({url:"https://github.com/your-repo/listing-comments/issues"})}openHelp(){chrome.tabs.create({url:"https://github.com/your-repo/listing-comments/wiki"})}}document.addEventListener("DOMContentLoaded",()=>{new r});
